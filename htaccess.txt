# 아파치 설정 파일
# httpd.apache.org/docs/2.2/mod/quickreference.html

# 알림: .htaccess 파일은 총체적인 내용이므로, 기술한 항목은 가능하면 Apache 의 설정에 넣어주세요.
# httpd.apache.org/docs/2.2/howto/htaccess.html

# 여기서 소개하는 기술은 아래를 포함한 여러곳에서 채용하였음:
#   Kroc Camen: camendesign.com/.htaccess
#   perishablepress.com/press/2006/01/10/stupid-htaccess-tricks/
#   CMS MODx 용 .htaccess 샘플 파일: modxcms.com


###
### apache 이외의 웹서버를 사용하는 경우, 고려하세요:
### github.com/paulirish/html5-boilerplate-server-configs
###



# ----------------------------------------------------------------------
# IE 사용자를 위한 더 나은 웹사이트 경험제공
# ----------------------------------------------------------------------

# IE7 모드로 변경하려는 여러 경우에, IE 최신버전으로 동작하도록 강제화
# github.com/rails/rails/commit/123eb25#commitcomment-118920
# IE 에서의 더 나은 경험을 제공하기 위해 설치 후 ChromeFrame 을 사용하도록 함


<IfModule mod_headers.c>
    Header set X-UA-Compatible "IE=Edge,chrome=1"
    # mod_headers 는 content-type 에 의해 매칭할 순 없음, *모든 것* 에 대해 이 헤더를 보내길 원하지는 않음
    <FilesMatch "\.(js|css|gif|png|jpe?g|pdf|xml|oga|ogg|m4a|ogv|mp4|m4v|webm|svg|svgz|eot|ttf|otf|woff|ico|webp|appcache|manifest|htc|crx|xpi|safariextz|vcf)$" >
      Header unset X-UA-Compatible
    </FilesMatch>
</IfModule>


# ----------------------------------------------------------------------
# 크로스 도메인 AJAX 요청
# ----------------------------------------------------------------------

# 크로스 도메인 ajax 요청, 비활성화.   
# enable-cors.org
# code.google.com/p/html5security/wiki/CrossOriginRequestSecurity

#  <IfModule mod_headers.c>
#    Header set Access-Control-Allow-Origin "*"
#  </IfModule>



# ----------------------------------------------------------------------
# 웹폰트 접근
# ----------------------------------------------------------------------

# 
# 웹폰트를 위해 모든 도메인의 접근을 허용함
# 또는 오직 허용된 도메인
# "sub.domain.com" 같은 서브도메인만 접근 허용 가능함
# 

<FilesMatch "\.(ttf|ttc|otf|eot|woff|font.css)$">
  <IfModule mod_headers.c>
    Header set Access-Control-Allow-Origin "*"
  </IfModule>
</FilesMatch>



# ----------------------------------------------------------------------
# 모든 파일에 적절한 MIME type
# ----------------------------------------------------------------------


# JavaScript
#   Normalize to standard type (it's sniffed in IE anyways) 
#   tools.ietf.org/html/rfc4329#section-7.2
AddType application/javascript         js

# 오디오
AddType audio/ogg                      oga ogg
AddType audio/mp4                      m4a

# 비디오
AddType video/ogg                      ogv
AddType video/mp4                      mp4 m4v
AddType video/webm                     webm

# SVG
#   iPad 에서 svg 웹폰트 사용을 위해서는 필수
#   twitter.com/FontSquirrel/status/14855840545
AddType     image/svg+xml              svg svgz 
AddEncoding gzip                       svgz
                                       
# 웹폰트                             
AddType application/vnd.ms-fontobject  eot
AddType application/x-font-ttf    ttf ttc
AddType font/opentype                  otf
AddType application/x-font-woff        woff

# 여러가지 파일타입                                      
AddType image/x-icon                   ico
AddType image/webp                     webp
AddType text/cache-manifest            appcache manifest
AddType text/x-component               htc
AddType application/x-chrome-extension crx
AddType application/x-xpinstall        xpi
AddType application/octet-stream       safariextz
AddType text/x-vcard                   vcf



# ----------------------------------------------------------------------
# 지정한 js 와 css 파일로부터 결합을 허락함  
# ----------------------------------------------------------------------

# 예. script.combined.js 안에 이러한 기술이 있으면
#   <!--#include file="libs/jquery-1.5.0.min.js" -->
#   <!--#include file="plugins/jquery.idletimer.js" -->
# 하나의 파일내에서 이들을 불러들인다.

# 현재 boilerplate 에서는 사용하지 않음. 
# 자신의 파일명을 선택하거나 수동으로 지정한 파일명을 연결하여
# concatenate and minify them manually.
# 기본적으로 무효화함

#<FilesMatch "\.combined\.js$">
#  Options +Includes
#  AddOutputFilterByType INCLUDES application/javascript application/json
#  SetOutputFilter INCLUDES
#</FilesMatch>
#<FilesMatch "\.combined\.css$">
#  Options +Includes
#  AddOutputFilterByType INCLUDES text/css
#  SetOutputFilter INCLUDES
#</FilesMatch>



# ----------------------------------------------------------------------
# Gzip 압축
# ----------------------------------------------------------------------

<IfModule mod_deflate.c>


# 훼손된 헤더를 강제로 디플레이트(defalte) 
# developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/
<IfModule mod_setenvif.c>
  <IfModule mod_headers.c>
    SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
    RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
  </IfModule>
</IfModule>

# HTML, TXT, CSS, JavaScript, JSON, XML, HTC:
<IfModule filter_module>
  FilterDeclare   COMPRESS
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/html
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/css
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/plain
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/xml
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/x-component
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/javascript
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/json
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/xml
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/xhtml+xml
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/rss+xml
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/atom+xml
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/vnd.ms-fontobject
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $image/svg+xml
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/x-font-ttf
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type $font/opentype
  FilterChain     COMPRESS
  FilterProtocol  COMPRESS  DEFLATE change=yes;byteranges=no
</IfModule>

<IfModule !mod_filter.c>
  # Apache 레거시 버전
  AddOutputFilterByType DEFLATE text/html text/plain text/css application/json
  AddOutputFilterByType DEFLATE application/javascript
  AddOutputFilterByType DEFLATE text/xml application/xml text/x-component
  AddOutputFilterByType DEFLATE application/xhtml+xml application/rss+xml application/atom+xml
  AddOutputFilterByType DEFLATE image/svg+xml application/vnd.ms-fontobject application/x-font-ttf font/opentype
</IfModule>
</IfModule>



# ----------------------------------------------------------------------
# 헤더 만료기한(보다 빠른 캐시 컨트롤을 위해)
# ----------------------------------------------------------------------

# 
# 헤더의 만료기간이 긴 방식
# 다음과 같은 쿼리 매개 변수는 캐시를 방지하는 버전을 컨트롤:
#   <script src="application.js?20100608">
# 추가로, 오래된 프록시는 캐싱에 실패할 수도 있음을 고려해야 함
# 
#   www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/

# 
# 파일명을 버전으로 관리하지 않으면, CSS 와 JS에 대해서는 "access plus 1 week" 와 같은 설정을 할 것
# 

<IfModule mod_expires.c>
  ExpiresActive on

# 어쩌면 만료기간 규칙의 화이트리스트에는 더 좋은 방법이 있을지도 모름? 추측임.
  ExpiresDefault                          "access plus 1 month"

# cache.appcache 는 FF 3.6 에서 재요청이 필요함 (출처 Remy ~Introducing HTML5)
  ExpiresByType text/cache-manifest       "access plus 0 seconds"



# 여러분의 HTML 문서
  ExpiresByType text/html                 "access plus 0 seconds"
  
# 데이터
  ExpiresByType text/xml                  "access plus 0 seconds"
  ExpiresByType application/xml           "access plus 0 seconds"
  ExpiresByType application/json          "access plus 0 seconds"

# RSS 피드
  ExpiresByType application/rss+xml       "access plus 1 hour"

# Favicon (이름변경불가)
  ExpiresByType image/x-icon              "access plus 1 week" 

# 미디어: 이미지, 비디오, 오디오
  ExpiresByType image/gif                 "access plus 1 month"
  ExpiresByType image/png                 "access plus 1 month"
  ExpiresByType image/jpg                 "access plus 1 month"
  ExpiresByType image/jpeg                "access plus 1 month"
  ExpiresByType video/ogg                 "access plus 1 month"
  ExpiresByType audio/ogg                 "access plus 1 month"
  ExpiresByType video/mp4                 "access plus 1 month"
  ExpiresByType video/webm                "access plus 1 month"
  
# HTC 파일  (css3pie)
  ExpiresByType text/x-component          "access plus 1 month"
  
# 웹폰트
  ExpiresByType font/truetype             "access plus 1 month"
  ExpiresByType font/opentype             "access plus 1 month"
  ExpiresByType application/x-font-woff   "access plus 1 month"
  ExpiresByType image/svg+xml             "access plus 1 month"
  ExpiresByType application/vnd.ms-fontobject "access plus 1 month"
    
# CSS 와 JavaScript
  ExpiresByType text/css                  "access plus 1 year"
  ExpiresByType application/javascript    "access plus 1 year"
  ExpiresByType text/javascript           "access plus 1 year"
  
  <IfModule mod_headers.c>
    Header append Cache-Control "public"
  </IfModule>
  
</IfModule>



# ----------------------------------------------------------------------
# ETag 제거
# ----------------------------------------------------------------------

# FileETag None is not enough for every server.
<IfModule mod_headers.c>
  Header unset ETag
</IfModule>

 
# 만료기한을 길게 설정하고 있기 때문에, 동적 컨텐츠용 ETags 는 필요하지 않음
# developer.yahoo.com/performance/rules.html#etags
FileETag None



# ----------------------------------------------------------------------
# IE 에서 CSS 의 롤오버시에 화면이 깜빡거리는 것을 방지
# ----------------------------------------------------------------------

# 다음 명령은 IE 에서 CSS 의 마우스 오버시에 이미지용 "ExpiresByType" 규칙 과 함께 화면이 깜빡거리는 것을 방지함 (위쪽 참조)
# 필요한 경우에는 아래 규칙의 주석을 제거할 것.

# BrowserMatch "MSIE" brokenvary=1
# BrowserMatch "Mozilla/4.[0-9]{2}" brokenvary=1
# BrowserMatch "Opera" !brokenvary
# SetEnvIf brokenvary 1 force-no-vary



# ----------------------------------------------------------------------
# iframe 에서 cookie 설정
# ----------------------------------------------------------------------

# iframe 에서 cookie 를 설정할 수 있도록 함 (IE용)
# 필요한 경우 주석을 제거하고 경로 또는 정규표현식으로 위치를 지정할 것 

# <IfModule mod_headers.c>
#   <Location />
#     Header set P3P "policyref=\"/w3c/p3p.xml\", CP=\"IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT\""
#   </Location>
# </IfModule>



# ----------------------------------------------------------------------
# 재작성(rewrite) 엔진을 시작함
# ----------------------------------------------------------------------

# 아래의 규칙과, 기능을 이용하기 위해서는 재작성(rewrite) 엔진을 활성화해야함.
# 이 작업을 위해서는 FollowSymLinks 가 유효해야 함.
<IfModule mod_rewrite.c>
  Options +FollowSymlinks
  RewriteEngine On
</IfModule>



# ----------------------------------------------------------------------
# URL 앞의 "www."를 숨기거나 강제하도록 함
# ----------------------------------------------------------------------

# 
# 동일한 컨텐츠는 SEO 문제 (중복 컨텐츠)를 야기할 수 있으므로, 2개의 다른 URL을 가져서는 안됨. 특히 "www."가 URL앞에 붙거나 붙지 않는 경우등. 
# 그러므로 하나만을 선택하고, 나머지는 선택한 곳으로 리다이렉트시켜야 함.
# 

# 기본옵션1 (no "www.") 은 활성화됨.
# 기억할 것: 짧은 URL이 좋다.
# no-www.org/faq.php?q=class_b

# 
# 옵션2를 사용하고 싶으면, 옵션1의 줄을 모두 주석처리하고, 옵션2의 줄을 주석제거한다.
# 중요사항: 절대 두개의 규칙을 동시에 사용하지 말 것!
# 

# ----------------------------------------------------------------------

# 
# 옵션1:
# 재작성(Rewrite) "www.domain.com -> domain.com"
# 

<IfModule mod_rewrite.c>
  RewriteCond %{HTTPS} !=on
  RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
  RewriteRule ^ http://%1%{REQUEST_URI} [R=301,L]
</IfModule>

# ----------------------------------------------------------------------

# 
# 옵션2:
# "domain.com 을 -> www.domain.com" 으로 재작성(rewrite) 할 경우 다음 줄의 주석을 제거함.
# 아래 규칙은 "진짜" 서브도메인을 웹사이트에서 이용할 때에는 좋은 생각이 아님
# 

# <IfModule mod_rewrite.c>
#   RewriteCond %{HTTPS} !=on
#   RewriteCond %{HTTP_HOST} !^www\..+$ [NC]
#   RewriteCond %{HTTP_HOST} (.+)$ [NC]
#   RewriteRule ^ http://www.%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
# </IfModule>



# ----------------------------------------------------------------------
# 파일명을 기반으로 캐시 버스팅(cache busting)을 내장하였음
# ----------------------------------------------------------------------

# 
# 파일명 버전관리를 위한 빌드스크립트를 사용하지 않는 경우, 활성화할 것을 고려해 볼 것。/css/all.20110203.css 파일을 res/all.css 로 바꿔서 요청한다.
# 

# 이것이 보다 중요하며 all.css?v1231, 보다 더 좋은 생각인 이유는, 
# github.com/paulirish/html5-boilerplate/wiki/Version-Control-with-Cachebusting

# 활성화를 위해서는 주석을 제거함.
# <IfModule mod_rewrite.c>
#   RewriteCond %{REQUEST_FILENAME} !-f
#   RewriteCond %{REQUEST_FILENAME} !-d
#   RewriteRule ^(.+)\.(\d+)\.(js|css|png|jpg|gif)$ $1.$3 [L]
# </IfModule>


	
# ----------------------------------------------------------------------
# SSL 인증서 경고를 하지 않음
# ----------------------------------------------------------------------

# 
# SS 인증서 경고를 안하도록 안전한 요청을 적절히 재작성(rewrite)함
# 예) 인증서가 https://secure.domain.com 에만 허가했을 때, https://www.domain.com 의 경고를 하지 않음
# 이 기능을 사용하기 위해 줄의 주석을 제거함.
# 

# <IfModule mod_rewrite.c>
#   RewriteCond %{SERVER_PORT} !^443
#   RewriteRule ^ https://example-domain-please-change-me.com%{REQUEST_URI} [R=301,L]
# </IfModule>



# ----------------------------------------------------------------------
# 존재하지 않는 폴더로 리다이렉트할 때 404 페이지를 보이지 않음
# ----------------------------------------------------------------------

# 
# -MultiViews 가 아니면, Apache는 동일한 이름으로 재작성(rewrite)한 폴더가 없는 경우 404 를 제공한다. 예) /blog/hello : webmasterworld.com/apache/3808792.htm
# 

Options -MultiViews 



# ----------------------------------------------------------------------
# 404 페이지 사용자화
# ----------------------------------------------------------------------

# 원하는 경우 500 또는 403 페이지를 간단하게 사용자화 할 수 있음.
ErrorDocument 404 /404.html



# ----------------------------------------------------------------------
# UTF-8 인코딩
# ----------------------------------------------------------------------

# text/plain 또는 text/html 에서 utf-8 인코딩을 사용함
AddDefaultCharset utf-8

# 대부분의 파일 포맷에 utf-8을 적용함
AddCharset utf-8 .html .css .js .xml .json .rss .atom



# ----------------------------------------------------------------------
# 보다 강화된 시큐리티
# ----------------------------------------------------------------------


# 
# 정확히 어떤 버전의 Apache 를 사용중인지 알려야 하나요? 아마도 그럴 필요없죠.
# httpd.conf 안에 설정했을 때만 활성화함- .htaccess 안에서의 설정을 동작하지 않음
# 
# ServerTokens Prod


# 
# "-Indexes" 옵션은 Apache에서 기본 문서가 존재하지 않는 폴더의 브라우징을 못하도록 블로킹한다.
# 일반적으로 서버의 모든 폴더 (예로 CMS의 시스템폴더 같은 개인적인 폴더)를 모든 사용자에게 접근가능한 권한을 줄 필요는 없기 때문에, 이 옵션은 항상 사용할 것
# 
# Options -Indexes


# 
# .(점)으로 시작하는 "hidden" 디렉토리의 접근을 못하게 막음.
# Subversion 또는 Git 등의 버전관리시스템(VCS)에서 사용하는 디렉토리를 포함함.
# 
<IfModule mod_rewrite.c>
  RewriteRule "(^|/)\." - [F]
</IfModule>


# 
# 만약 서버가 이렇게 설정되어 있지 않으면, PHP의 register_globals 옵션을 끄기 위해 다음 명령 커맨드를 주석제거한 후 사용할 것. 많은 XSS (cross-site scripting) 공격에 의한 보안침입을 방지할 수 있음. 보다 자세한 정보: http://php.net/register_globals
#
# 만약 REGISTER_GLOBALS 명령이 500 INTERNAL SERVER ERROR 를 발생시키면 :
#
# 이용중인 서버가 PHP명령을 .htacceess를 경유해서 설정할 수 없음. 그런 경우, 이 설정은 php.ini 파일에 설정할 것. 만약 웹호스팅서비스를 이용중인 경우, 해당 관리자에게 지원을 별도문의해야 함. 모든 서버에서 php.ini의 로컬저장이 허가되지 않으면, 모든 PHP의 설정(이 설정뿐아니라 모두)을 php.ini로 하게 해야함. 그렇지 않으면 PHP의 기본설정을 초기화해야 함.
# php 설정에 관한 상세한 정보는 www.php.net를 살펴볼 것.
# 

# php_flag register_globals Off

# 세션 쿠키를 PHPSESSID가 아닌 다른 이름으로 변경한다.
# php_value session.name sid

# PHP를 사용중인 것을 보여주지 않음
# 알림: 이줄은 .htaccess에서 동작하지 않으므로 php.ini 안으로 옮길 것
# php_flag expose_php Off

# 로그 레벨 - 모든 에러 로그
# php_value error_reporting -1

# 로그파일에 에러를 기록한다
# php_flag log_errors On

# 브라우저에 에러를 표시하지 않는다 (운영환경 - Off, 개발환경 - On)
# php_flag display_errors Off

# 시작할 때의 에러를 표시하지 않는다 (운영환경 - Off, 개발환경 - On)
# php_flag display_startup_errors Off

# plain text 에서 에러를 출력함
# php_flag html_errors Off

# 반복되는 에러를 표시한다
# php_flag ignore_repeated_errors Off

# 다른 소스에서의 동일한 오류를 표시한다
# php_flag ignore_repeated_source Off

# 에러 메시지의 최대 사이즈
# php_value log_errors_max_len 1024

# Don't precede error with string (doesn't accept empty string, use whitespace if you need)
# php_value error_prepend_string " "

# 오류 앞에 출력할 문자열 (빈값은 사용불가, 필요시에는 공백 스페이스를 사용해야 함)
# php_value error_append_string " "

# cookie 보안을 강화한다
<IfModule php5_module>
	php_value session.cookie_httponly true
</IfModule>
